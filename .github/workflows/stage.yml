name: Stage

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_REGISTRY: kudosportal/issues

jobs:
  stage-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Run Clippy
        run: |
          cargo clippy --all-targets --all-features

      - name: Build code
        run: |
          cargo build --verbose

      - name: Test code
        run: |
          make test

      - name: Integration tests
        run: |
          make test-db
        env:
          DATABASE_URL: ${{ secrets.TESTS_DATABASE_URL }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build, tag and push docker image to Docker Hub
        id: build-dockerhub-image
        run: |
          image=${{ env.DOCKERHUB_REGISTRY }}:${{ github.sha }}
          docker build -t $image .
          docker push $image
          echo "image=$image" >> $GITHUB_OUTPUT

      - name: Deploy staging
        run: |
          image=docker.io/${{ steps.build-dockerhub-image.outputs.image }}
          encoded_image=$(echo -n $image | jq -sRr @uri)
          curl -f "${{ secrets.STAGE_DEPLOY_HOOK }}&imgURL=$encoded_image"